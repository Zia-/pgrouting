\echo '-----------------------------------------'
\echo '2.X TESTS return true for valid inputs types for:  _pgr_4parameter_check'
\echo '-----------------------------------------'
select _pgr_4parameter_check('select id, source, target, cost, reverse_cost from edge_table');
select _pgr_4parameter_check('select reverse_cost, id,  source, target, cost from edge_table');
select _pgr_4parameter_check('select * from edge_table');

select _pgr_4parameter_check('select id, source, target, cost from edge_table');
select _pgr_4parameter_check('select cost, id ,  source, target from edge_table');
select _pgr_4parameter_check('select * from edge_table');

select _pgr_4parameter_check('select id, cost, source, target, cost as reverse_cost from edge_table');
select _pgr_4parameter_check('select id, reverse_cost::bigint, source, target, cost from edge_table');
select _pgr_4parameter_check('select id, reverse_cost::smallint, source, target, cost from edge_table');
select _pgr_4parameter_check('select id, reverse_cost::real, source, target, cost from edge_table');
select _pgr_4parameter_check('select id as source, reverse_cost::bigint, source as id, target, cost from edge_table');

select _pgr_4parameter_check('select 1 as id, 2 as source, 3 as target, cost from edge_table');
select _pgr_4parameter_check('select 1.0::integer as id, 2.0::integer as source, 3.0::integer as target, cost from edge_table');
select _pgr_4parameter_check('select 1 as id, 2.0::integer as source, 3.0::integer as target, cost from edge_table');
select _pgr_4parameter_check('select 1 as id, 2 as source, 3.0::integer as target, cost from edge_table');

select _pgr_4parameter_check('select id, source, target, -1::double precision as cost from edge_table');
select _pgr_4parameter_check('select id, source, target, -1.0::double precision as cost from edge_table');



\echo '-----------------------------------------'
\echo '2.X TEST rejects bad input but 3.X accepts:  _pgr_4parameter_check'
\echo '-----------------------------------------'
select _pgr_4parameter_check('select id::bigint, source, target, cost, reverse_cost from edge_table');
select _pgr_4parameter_check('select id::smallint, source, target, cost, reverse_cost from edge_table');
select _pgr_4parameter_check('select id::real, source, target, cost, reverse_cost from edge_table');

select _pgr_4parameter_check('select id, source::bigint, target, cost, reverse_cost from edge_table');
select _pgr_4parameter_check('select id, source::smallint, target, cost, reverse_cost from edge_table');
select _pgr_4parameter_check('select id, source::real, target, cost, reverse_cost from edge_table');

select _pgr_4parameter_check('select id, target::bigint, source, cost, reverse_cost from edge_table');
select _pgr_4parameter_check('select id, target::smallint, source, cost, reverse_cost from edge_table');
select _pgr_4parameter_check('select id, target::real, source, cost, reverse_cost from edge_table');

select _pgr_4parameter_check('select id, cost::bigint, source, target, reverse_cost from edge_table');
select _pgr_4parameter_check('select id, cost::smallint, source, target, reverse_cost from edge_table');
select _pgr_4parameter_check('select id, cost::real, source, target, reverse_cost from edge_table');

select _pgr_4parameter_check('select id, source, target, -1 as cost from edge_table');
select _pgr_4parameter_check('select id, source, target, -1.0 as cost from edge_table');


\echo '-----------------------------------------'
\echo 'Any version TEST rejects bad input'  _pgr_4parameter_check'
\echo '-----------------------------------------'
select _pgr_4parameter_check('select 1.0 as id, 2.0 as source, 3.0 as target, cost, reverse_cost from edge_table');
select _pgr_4parameter_check('select 1 as id, 2.0 as source, 3.0 as target, cost, reverse_cost from edge_table');
select _pgr_4parameter_check('select 1 as id, 2 as source, 3.0 as target, cost, reverse_cost from edge_table');
select _pgr_4parameter_check('select id::char, source, target, id, reverse_cost from edge_table');
select _pgr_4parameter_check('select id::varchar, source, target, id, reverse_cost from edge_table');
select _pgr_4parameter_check('select id::text, source, target, id, reverse_cost from edge_table');
select _pgr_4parameter_check('select id::numeric, source, target, id, reverse_cost from edge_table');
select _pgr_4parameter_check('select cost::char, source, target, id, reverse_cost from edge_table');
select _pgr_4parameter_check('select cost::varchar, source, target, id, reverse_cost from edge_table');
select _pgr_4parameter_check('select cost::text, source, target, id, reverse_cost from edge_table');



\echo '-----------------------------------------'
\echo '-----------------------------------------'
\echo '-----------------------------------------'
\echo '2.X TESTS return true for valid inputs types for: _pgr_reverse_cost_check'
\echo '-----------------------------------------'
select _pgr_reverse_cost_check('select id, source, target, cost, reverse_cost from edge_table');
select _pgr_reverse_cost_check('select id, source, target, cost, -1::double precision as reverse_cost from edge_table');
select _pgr_reverse_cost_check('select id, source, target, cost, -1.0::double precision as reverse_cost from edge_table');
select _pgr_reverse_cost_check('select id, source, target, cost, id::double precision as reverse_cost from edge_table');



\echo '-----------------------------------------'
\echo '2.X TEST rejects bad input but 3.X accepts: _pgr_reverse_cost_check'
\echo '-----------------------------------------'
select _pgr_reverse_cost_check('select id, source, target, cost, reverse_cost::smallint from edge_table');
select _pgr_reverse_cost_check('select id, source, target, cost, reverse_cost::integer from edge_table');
select _pgr_reverse_cost_check('select id, source, target, cost, reverse_cost::bigint from edge_table');
select _pgr_reverse_cost_check('select id, source, target, cost, reverse_cost::real from edge_table');
select _pgr_reverse_cost_check('select id, source, target, cost, reverse_cost::numeric from edge_table');

\echo '-----------------------------------------'
\echo 'Any version TEST rejects bad input: _pgr_reverse_cost_check'
\echo '-----------------------------------------'
select _pgr_reverse_cost_check('select id, source, target, cost, reverse_cost::text from edge_table');
select _pgr_reverse_cost_check('select id, source, target, cost, reverse_cost::varchar from edge_table');

